// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Oscillator 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <styled.div>
        <styled.div>
            <Knob
                angleArc={250}
                angleOffset={-125}
                bgColor="#EEE"
                clockwise={true}
                cursor={false}
                disableMouseWheel={false}
                disableTextInput={false}
                displayInput={true}
                fgColor="#EA2"
                font="Arial"
                fontWeight="bold"
                height={28}
                inputColor=""
                lineCap="butt"
                log={false}
                max={1}
                min={0}
                onChange={[Function]}
                onChangeEnd={[Function]}
                readOnly={false}
                step={0.001}
                stopper={true}
                thickness={0.3}
                value={0.5}
                width={28}
            />
            <styled.span>
                Volume
            </styled.span>
        </styled.div>
        <Waveforms
            onWaveformChange={[Function]}
            waveforms={Array []}
        />
        <styled.div>
            <styled.input
                max="50"
                min="-50"
                onChange={[Function]}
                type="number"
                value={0}
            />
            <styled.span>
                Cent
            </styled.span>
        </styled.div>
        <styled.div>
            <styled.input
                max="24"
                min="-24"
                onChange={[Function]}
                type="number"
                value={0}
            />
            <styled.span>
                Semi
            </styled.span>
        </styled.div>
    </styled.div>
</styled.div>,
  "nodes": Array [
    <styled.div>
      <styled.div>
            <styled.div>
                  <Knob
                        angleArc={250}
                        angleOffset={-125}
                        bgColor="#EEE"
                        clockwise={true}
                        cursor={false}
                        disableMouseWheel={false}
                        disableTextInput={false}
                        displayInput={true}
                        fgColor="#EA2"
                        font="Arial"
                        fontWeight="bold"
                        height={28}
                        inputColor=""
                        lineCap="butt"
                        log={false}
                        max={1}
                        min={0}
                        onChange={[Function]}
                        onChangeEnd={[Function]}
                        readOnly={false}
                        step={0.001}
                        stopper={true}
                        thickness={0.3}
                        value={0.5}
                        width={28}
                  />
                  <styled.span>
                        Volume
                  </styled.span>
            </styled.div>
            <Waveforms
                  onWaveformChange={[Function]}
                  waveforms={Array []}
            />
            <styled.div>
                  <styled.input
                        max="50"
                        min="-50"
                        onChange={[Function]}
                        type="number"
                        value={0}
                  />
                  <styled.span>
                        Cent
                  </styled.span>
            </styled.div>
            <styled.div>
                  <styled.input
                        max="24"
                        min="-24"
                        onChange={[Function]}
                        type="number"
                        value={0}
                  />
                  <styled.span>
                        Semi
                  </styled.span>
            </styled.div>
      </styled.div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Oscillator
        oscillator={
                Object {
                        "offset": 0,
                        "peakVolume": 0.5,
                        "playing": false,
                        "semi": 0,
                        "waveform": "sine",
                      }
        }
        setOffset={[Function]}
        setOscillatorVolume={[Function]}
        setSemi={[Function]}
        setWaveform={[Function]}
        waveforms={Array []}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "oscillator": Object {
            "offset": 0,
            "peakVolume": 0.5,
            "playing": false,
            "semi": 0,
            "waveform": "sine",
          },
          "setOffset": [Function],
          "setOscillatorVolume": [Function],
          "setSemi": [Function],
          "setWaveform": [Function],
          "waveforms": Array [],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <styled.div>
                    <styled.div>
                              <Knob
                                        angleArc={250}
                                        angleOffset={-125}
                                        bgColor="#EEE"
                                        clockwise={true}
                                        cursor={false}
                                        disableMouseWheel={false}
                                        disableTextInput={false}
                                        displayInput={true}
                                        fgColor="#EA2"
                                        font="Arial"
                                        fontWeight="bold"
                                        height={28}
                                        inputColor=""
                                        lineCap="butt"
                                        log={false}
                                        max={1}
                                        min={0}
                                        onChange={[Function]}
                                        onChangeEnd={[Function]}
                                        readOnly={false}
                                        step={0.001}
                                        stopper={true}
                                        thickness={0.3}
                                        value={0.5}
                                        width={28}
                              />
                              <styled.span>
                                        Volume
                              </styled.span>
                    </styled.div>
                    <Waveforms
                              onWaveformChange={[Function]}
                              waveforms={Array []}
                    />
                    <styled.div>
                              <styled.input
                                        max="50"
                                        min="-50"
                                        onChange={[Function]}
                                        type="number"
                                        value={0}
                              />
                              <styled.span>
                                        Cent
                              </styled.span>
                    </styled.div>
                    <styled.div>
                              <styled.input
                                        max="24"
                                        min="-24"
                                        onChange={[Function]}
                                        type="number"
                                        value={0}
                              />
                              <styled.span>
                                        Semi
                              </styled.span>
                    </styled.div>
          </styled.div>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <styled.div>
                    <styled.div>
                              <Knob
                                        angleArc={250}
                                        angleOffset={-125}
                                        bgColor="#EEE"
                                        clockwise={true}
                                        cursor={false}
                                        disableMouseWheel={false}
                                        disableTextInput={false}
                                        displayInput={true}
                                        fgColor="#EA2"
                                        font="Arial"
                                        fontWeight="bold"
                                        height={28}
                                        inputColor=""
                                        lineCap="butt"
                                        log={false}
                                        max={1}
                                        min={0}
                                        onChange={[Function]}
                                        onChangeEnd={[Function]}
                                        readOnly={false}
                                        step={0.001}
                                        stopper={true}
                                        thickness={0.3}
                                        value={0.5}
                                        width={28}
                              />
                              <styled.span>
                                        Volume
                              </styled.span>
                    </styled.div>
                    <Waveforms
                              onWaveformChange={[Function]}
                              waveforms={Array []}
                    />
                    <styled.div>
                              <styled.input
                                        max="50"
                                        min="-50"
                                        onChange={[Function]}
                                        type="number"
                                        value={0}
                              />
                              <styled.span>
                                        Cent
                              </styled.span>
                    </styled.div>
                    <styled.div>
                              <styled.input
                                        max="24"
                                        min="-24"
                                        onChange={[Function]}
                                        type="number"
                                        value={0}
                              />
                              <styled.span>
                                        Semi
                              </styled.span>
                    </styled.div>
          </styled.div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Oscillator
    oscillator={
        Object {
            "offset": 0,
            "peakVolume": 0.5,
            "playing": false,
            "semi": 0,
            "waveform": "sine",
          }
    }
    setOffset={[Function]}
    setOscillatorVolume={[Function]}
    setSemi={[Function]}
    setWaveform={[Function]}
    waveforms={Array []}
/>,
}
`;
